name: Run Tests and Lint Code Base
  
on:
  push:
    branches:
      - main  

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      # Steps to set up and run tests
      - name: Checkout code
        uses: actions/checkout@v2  # Checkout the repository's code

      # Install dependencies
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # Specify the Python version

      - name: Install dependencies
        run: |
          pip3 install pytest requests Flask Flask-SQLAlchemy Flask-Cors google-api-python-client google-auth-httplib2 google-auth-oauthlib Flask-MySQLdb pymysql

      # Start applications
      - name: Start application 1
        run: python3 -u src/CRUD_on_car/Vehicles_CRUD.py --port 5000 &

      - name: Start application 2 
        run: python3 -u src/CRUD_on_reservation/reservation.py --port 5001 &

      - name: Start application 3 
        run: python3 -u src/CRUD_on_user/user.py --port 5002 &

      # Clean Python cache
      - name: Clean Python Cache
        run: |
          find . -name "*.pyc" -exec rm -f {} +
          find . -name "__pycache__" -exec rm -rf {} +

      # Run tests
      - name: Run tests
        run: pytest



  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      # Steps to lint code base
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Generate Stylelint config
        run: |
          echo '{ "extends": "stylelint-config-standard", "rules": { "comment-empty-line-before": null, "media-feature-range-notation": null, "color-function-notation": null } }' > .stylelintrc

      # Install Stylelint for CSS linting
      - name: Install Stylelint
        run: npm install stylelint stylelint-config-standard --save-dev

      # Run Stylelint for CSS files
      - name: Run Stylelint
        run: npx stylelint "**/*.css"
        
      # Install Pylint for Python linting
      - name: Install Pylint
        run: pip install pylint

      - name: Run Pylint
        run: pylint "project/models/*.py"

          
      # Add pre-commit hooks
      - name: Add pre-commit hooks
        run: npx husky install

      # Configure lint-staged for pre-commit hooks
      - name: Configure lint-staged
        run: npx lint-staged install
